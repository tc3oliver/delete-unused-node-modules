const fs=require("fs"),path=require("path"),projectRoot="./";function walk(e){let o;fs.readdirSync(e).forEach(o=>{let s=path.join(e,o),t;fs.statSync(s).isDirectory()?walk(s):".html"===path.extname(o)&&processHtmlFile(s)})}function processHtmlFile(e){const o=fs.readFileSync(e,"utf8"),s=/<script[^>]*src=["']([^"']+)["'][^>]*>\s*<\/script>/g;let t;for(;null!==(t=s.exec(o));){const e=t[1];if(e&&e.includes("node_modules")){const o=path.join(projectRoot,e),s=path.resolve(e),t=/node_modules[\\/](.*)/.exec(s);if(t){const e=t[0];console.log(e),paths.push(e)}else console.log("路徑中不包含 node_modules");console.log(o)}}const l=/<link[^>]*href=["']([^"']+)["'][^>]*>/g;for(;null!==(t=l.exec(o));){const e=t[1];if(e&&e.includes("node_modules")){const o=path.join(projectRoot,e),s=path.resolve(e),t=/node_modules[\\/](.*)/.exec(s);if(t){const e=t[0];console.log(e),paths.push(e)}else console.log("路徑中不包含 node_modules");console.log(o)}}}let paths=[];walk(projectRoot);const nodeModulesDir="node_modules",excludedPath="icons-webfont";function deleteNM(e){let o;fs.readdirSync(e).forEach(o=>{let s=path.join(e,o),t;if(fs.statSync(s).isDirectory()){if(s.includes(excludedPath))return;deleteNM(s)}else s.includes(excludedPath)||usedPaths.includes(s)||(fs.unlinkSync(s),console.log(`已刪除檔案：${s}`))})}const usedPaths=paths;deleteNM("node_modules");
